import { useState } from 'react';
import Icon from '@/components/ui/icon';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
  Area,
  AreaChart,
} from 'recharts';

const performanceData = [
  { month: '–°–µ–Ω', score: 72 },
  { month: '–û–∫—Ç', score: 78 },
  { month: '–ù–æ—è', score: 85 },
  { month: '–î–µ–∫', score: 82 },
  { month: '–Ø–Ω–≤', score: 88 },
  { month: '–§–µ–≤', score: 92 },
];

const scheduleData = [
  { time: '09:00', subject: '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', room: '–ê—É–¥. 201', type: 'lecture' },
  { time: '10:45', subject: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', room: '–ö–æ–º–ø. –∫–ª–∞—Å—Å 3', type: 'practice' },
  { time: '13:00', subject: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π —è–∑—ã–∫', room: '–ê—É–¥. 105', type: 'seminar' },
  { time: '14:45', subject: '–§–∏–∑–∏–∫–∞', room: '–ê—É–¥. 301', type: 'lecture' },
];

const tasksData = [
  { id: 1, title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ5', subject: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', deadline: '2 –¥–Ω—è', priority: 'high', completed: false },
  { id: 2, title: '–≠—Å—Å–µ: –ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏', subject: '–ò—Å—Ç–æ—Ä–∏—è', deadline: '5 –¥–Ω–µ–π', priority: 'medium', completed: false },
  { id: 3, title: '–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á 12-24', subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', deadline: '1 –Ω–µ–¥–µ–ª—è', priority: 'low', completed: false },
  { id: 4, title: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞', subject: '–§–∏–∑–∏–∫–∞', deadline: '–ó–∞–≤—Ç—Ä–∞', priority: 'high', completed: false },
];

const eventsData = [
  { id: 1, title: '–î–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π', date: '15 –Ω–æ—è–±—Ä—è', icon: 'Users' },
  { id: 2, title: '–ù–∞—É—á–Ω–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', date: '22 –Ω–æ—è–±—Ä—è', icon: 'BookOpen' },
  { id: 3, title: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä', date: '28 –Ω–æ—è–±—Ä—è', icon: 'Trophy' },
];

const coursesData = [
  {
    id: 1,
    name: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    teacher: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
    progress: 75,
    assignments: [
      { id: 1, title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ5: –ú–∞—Å—Å–∏–≤—ã', deadline: '2024-11-20', status: 'in_progress', comment: '' },
      { id: 2, title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ4: –§—É–Ω–∫—Ü–∏–∏', deadline: '2024-11-15', status: 'completed', comment: '–û—Ç–ª–∏—á–Ω–æ! 5 –±–∞–ª–ª–æ–≤' },
      { id: 3, title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ3: –¶–∏–∫–ª—ã', deadline: '2024-11-10', status: 'completed', comment: '–•–æ—Ä–æ—à–∞—è —Ä–∞–±–æ—Ç–∞. 4 –±–∞–ª–ª–∞' },
    ]
  },
  {
    id: 2,
    name: '–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
    teacher: '–ü–µ—Ç—Ä–æ–≤–∞ –ê.–°.',
    progress: 60,
    assignments: [
      { id: 4, title: '–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ ‚Ññ8', deadline: '2024-11-22', status: 'not_started', comment: '' },
      { id: 5, title: '–ö–æ–Ω—Ç—Ä–æ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ2', deadline: '2024-11-18', status: 'in_progress', comment: '' },
    ]
  },
  {
    id: 3,
    name: '–§–∏–∑–∏–∫–∞',
    teacher: '–°–∏–¥–æ—Ä–æ–≤ –í.–ü.',
    progress: 85,
    assignments: [
      { id: 6, title: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞', deadline: '2024-11-16', status: 'in_progress', comment: '' },
      { id: 7, title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ6', deadline: '2024-11-12', status: 'completed', comment: '–û—Ç–ª–∏—á–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ! 5' },
    ]
  },
];

const worksData = [
  {
    id: 1,
    title: '–ö—É—Ä—Å–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞: –ê–ª–≥–æ—Ä–∏—Ç–º—ã —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏',
    author: '–ê–ª–µ–∫—Å–µ–π –°–º–∏—Ä–Ω–æ–≤',
    specialty: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    type: '–ö—É—Ä—Å–æ–≤–∞—è',
    subject: '–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞',
    rating: 4.8,
    downloads: 124,
    description: '–ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞ –Ω–∞ Python',
  },
  {
    id: 2,
    title: '–†–µ—Ñ–µ—Ä–∞—Ç: –ö–≤–∞–Ω—Ç–æ–≤–∞—è –º–µ—Ö–∞–Ω–∏–∫–∞',
    author: '–ú–∞—Ä–∏—è –ü–µ—Ç—Ä–æ–≤–∞',
    specialty: '–§–∏–∑–∏–∫–∞',
    type: '–†–µ—Ñ–µ—Ä–∞—Ç',
    subject: '–§–∏–∑–∏–∫–∞',
    rating: 4.5,
    downloads: 89,
    description: '–û—Å–Ω–æ–≤—ã –∫–≤–∞–Ω—Ç–æ–≤–æ–π –º–µ—Ö–∞–Ω–∏–∫–∏ –∏ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞—É–∫–µ',
  },
  {
    id: 3,
    title: '–î–∏–ø–ª–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞: React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    author: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    specialty: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    type: '–î–∏–ø–ª–æ–º–Ω–∞—è',
    subject: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
    rating: 5.0,
    downloads: 203,
    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React –∏ TypeScript',
  },
  {
    id: 4,
    title: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è: –•–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑',
    author: '–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞',
    specialty: '–•–∏–º–∏—è',
    type: '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è',
    subject: '–•–∏–º–∏—è',
    rating: 4.3,
    downloads: 67,
    description: '–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏–π —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –≤—ã–≤–æ–¥–∞–º–∏',
  },
  {
    id: 5,
    title: '–ö—É—Ä—Å–æ–≤–∞—è: –≠–∫–æ–Ω–æ–º–∏–∫–∞ –†–æ—Å—Å–∏–∏',
    author: '–ò–≥–æ—Ä—å –ù–æ–≤–∏–∫–æ–≤',
    specialty: '–≠–∫–æ–Ω–æ–º–∏–∫–∞',
    type: '–ö—É—Ä—Å–æ–≤–∞—è',
    subject: '–≠–∫–æ–Ω–æ–º–∏–∫–∞',
    rating: 4.6,
    downloads: 95,
    description: '–ê–Ω–∞–ª–∏–∑ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –†–æ—Å—Å–∏–∏ –≤ XXI –≤–µ–∫–µ',
  },
  {
    id: 6,
    title: '–†–µ—Ñ–µ—Ä–∞—Ç: Machine Learning',
    author: '–ï–ª–µ–Ω–∞ –°–æ–∫–æ–ª–æ–≤–∞',
    specialty: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
    type: '–†–µ—Ñ–µ—Ä–∞—Ç',
    subject: '–ò–ò',
    rating: 4.9,
    downloads: 156,
    description: '–í–≤–µ–¥–µ–Ω–∏–µ –≤ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏',
  },
];

export default function Index() {
  const [activeTab, setActiveTab] = useState('dashboard');
  const [tasks, setTasks] = useState(tasksData);
  const [selectedCourse, setSelectedCourse] = useState<number | null>(null);
  const [filterSpecialty, setFilterSpecialty] = useState('–í—Å–µ');
  const [filterType, setFilterType] = useState('–í—Å–µ');
  const [filterSubject, setFilterSubject] = useState('–í—Å–µ');

  const toggleTaskComplete = (id: number) => {
    setTasks(tasks.map(task => 
      task.id === id ? { ...task, completed: !task.completed } : task
    ));
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return 'bg-red-500';
      case 'medium': return 'bg-yellow-500';
      case 'low': return 'bg-green-500';
      default: return 'bg-gray-500';
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'lecture': return 'BookOpen';
      case 'practice': return 'Code';
      case 'seminar': return 'MessageSquare';
      default: return 'Calendar';
    }
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white border-b border-gray-200 sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center gap-3">
              <div className="w-10 h-10 bg-gradient-to-br from-primary to-blue-600 rounded-xl flex items-center justify-center">
                <Icon name="GraduationCap" className="text-white" size={24} />
              </div>
              <h1 className="text-2xl font-bold text-gray-900">StudApp</h1>
            </div>
            
            <nav className="hidden md:flex items-center gap-1">
              <Button
                variant={activeTab === 'dashboard' ? 'default' : 'ghost'}
                className="gap-2"
                onClick={() => setActiveTab('dashboard')}
              >
                <Icon name="LayoutDashboard" size={18} />
                –ì–ª–∞–≤–Ω–∞—è
              </Button>
              <Button
                variant={activeTab === 'learning' ? 'default' : 'ghost'}
                className="gap-2"
                onClick={() => setActiveTab('learning')}
              >
                <Icon name="BookOpen" size={18} />
                –î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ
              </Button>
              <Button
                variant={activeTab === 'market' ? 'default' : 'ghost'}
                className="gap-2"
                onClick={() => setActiveTab('market')}
              >
                <Icon name="ShoppingBag" size={18} />
                –ú–∏–Ω–∏–º–∞—Ä–∫–µ—Ç
              </Button>
            </nav>

            <div className="flex items-center gap-3">
              <Button variant="ghost" size="icon" className="relative">
                <Icon name="Bell" size={20} />
                <span className="absolute top-1 right-1 w-2 h-2 bg-red-500 rounded-full"></span>
              </Button>
              <div className="w-9 h-9 bg-primary rounded-full flex items-center justify-center text-white font-semibold">
                –ò–ü
              </div>
            </div>
          </div>
        </div>
      </header>

      {activeTab === 'dashboard' && (
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="mb-6">
            <h2 className="text-3xl font-bold text-gray-900">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ò–≤–∞–Ω! üëã</h2>
            <p className="text-gray-600 mt-1">–í–æ—Ç —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–≥–æ–¥–Ω—è</p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
            <Card className="lg:col-span-2 hover:shadow-lg transition-shadow">
              <CardHeader className="flex flex-row items-center justify-between">
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Calendar" className="text-primary" size={24} />
                  –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
                </CardTitle>
                <Badge variant="outline">4 –ø–∞—Ä—ã</Badge>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {scheduleData.map((item, index) => (
                    <div
                      key={index}
                      className="flex items-center gap-4 p-4 rounded-lg border border-gray-200 hover:border-primary hover:bg-primary/5 transition-all"
                    >
                      <div className="flex flex-col items-center justify-center min-w-[60px]">
                        <span className="text-sm font-semibold text-primary">{item.time}</span>
                      </div>
                      <div className="w-10 h-10 rounded-lg bg-primary/10 flex items-center justify-center">
                        <Icon name={getTypeIcon(item.type)} className="text-primary" size={20} />
                      </div>
                      <div className="flex-1">
                        <p className="font-semibold text-gray-900">{item.subject}</p>
                        <p className="text-sm text-gray-600">{item.room}</p>
                      </div>
                      <Badge variant="secondary" className="capitalize">
                        {item.type === 'lecture' && '–õ–µ–∫—Ü–∏—è'}
                        {item.type === 'practice' && '–ü—Ä–∞–∫—Ç–∏–∫–∞'}
                        {item.type === 'seminar' && '–°–µ–º–∏–Ω–∞—Ä'}
                      </Badge>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card className="hover:shadow-lg transition-shadow">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Bell" className="text-primary" size={24} />
                  –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  <div className="p-3 rounded-lg bg-blue-50 border border-blue-200">
                    <div className="flex items-start gap-3">
                      <Icon name="AlertCircle" className="text-blue-600 mt-0.5" size={18} />
                      <div>
                        <p className="text-sm font-medium text-blue-900">–ß–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç</p>
                        <p className="text-xs text-blue-700">–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤ –ê—É–¥. 201</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-3 rounded-lg bg-orange-50 border border-orange-200">
                    <div className="flex items-start gap-3">
                      <Icon name="Clock" className="text-orange-600 mt-0.5" size={18} />
                      <div>
                        <p className="text-sm font-medium text-orange-900">–î–µ–¥–ª–∞–π–Ω –∑–∞–≤—Ç—Ä–∞</p>
                        <p className="text-xs text-orange-700">–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ</p>
                      </div>
                    </div>
                  </div>
                  <div className="p-3 rounded-lg bg-green-50 border border-green-200">
                    <div className="flex items-start gap-3">
                      <Icon name="CheckCircle" className="text-green-600 mt-0.5" size={18} />
                      <div>
                        <p className="text-sm font-medium text-green-900">–û—Ü–µ–Ω–∫–∞ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∞</p>
                        <p className="text-xs text-green-700">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è ‚Ññ4: –û—Ç–ª–∏—á–Ω–æ (5)</p>
                      </div>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6">
            <Card className="hover:shadow-lg transition-shadow">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="ListTodo" className="text-primary" size={24} />
                  –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-3">
                  {tasks.map((task) => (
                    <div
                      key={task.id}
                      className={`flex items-center gap-4 p-4 rounded-lg border transition-all ${
                        task.completed
                          ? 'bg-gray-50 border-gray-200 opacity-60'
                          : 'border-gray-200 hover:border-primary hover:bg-primary/5'
                      }`}
                    >
                      <button
                        onClick={() => toggleTaskComplete(task.id)}
                        className={`w-5 h-5 rounded border-2 flex items-center justify-center transition-all ${
                          task.completed
                            ? 'bg-primary border-primary'
                            : 'border-gray-300 hover:border-primary'
                        }`}
                      >
                        {task.completed && <Icon name="Check" className="text-white" size={14} />}
                      </button>
                      <div className="flex-1">
                        <p className={`font-semibold ${task.completed ? 'line-through text-gray-500' : 'text-gray-900'}`}>
                          {task.title}
                        </p>
                        <p className="text-sm text-gray-600">{task.subject}</p>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className={`w-2 h-2 rounded-full ${getPriorityColor(task.priority)}`}></div>
                        <span className="text-xs text-gray-600">{task.deadline}</span>
                      </div>
                    </div>
                  ))}
                </div>
              </CardContent>
            </Card>

            <Card className="hover:shadow-lg transition-shadow">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="TrendingUp" className="text-primary" size={24} />
                  –ò–ò-–∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç–∏
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="mb-6">
                  <div className="flex items-center justify-between mb-2">
                    <span className="text-sm font-medium text-gray-700">–°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª</span>
                    <span className="text-2xl font-bold text-primary">4.6</span>
                  </div>
                  <Progress value={92} className="h-2" />
                </div>

                <div className="h-48 mb-4">
                  <ResponsiveContainer width="100%" height="100%">
                    <AreaChart data={performanceData}>
                      <defs>
                        <linearGradient id="colorScore" x1="0" y1="0" x2="0" y2="1">
                          <stop offset="5%" stopColor="#0EA5E9" stopOpacity={0.3}/>
                          <stop offset="95%" stopColor="#0EA5E9" stopOpacity={0}/>
                        </linearGradient>
                      </defs>
                      <CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" />
                      <XAxis dataKey="month" stroke="#6b7280" style={{ fontSize: '12px' }} />
                      <YAxis stroke="#6b7280" style={{ fontSize: '12px' }} />
                      <Tooltip />
                      <Area
                        type="monotone"
                        dataKey="score"
                        stroke="#0EA5E9"
                        strokeWidth={2}
                        fill="url(#colorScore)"
                      />
                    </AreaChart>
                  </ResponsiveContainer>
                </div>

                <div className="p-4 rounded-lg bg-gradient-to-r from-blue-50 to-cyan-50 border border-blue-200">
                  <div className="flex items-start gap-3">
                    <Icon name="Sparkles" className="text-blue-600 mt-0.5" size={20} />
                    <div>
                      <p className="text-sm font-semibold text-blue-900 mb-1">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ò–ò</p>
                      <p className="text-xs text-blue-700">
                        –û—Ç–ª–∏—á–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞! –í–∞—à–∞ —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç—å –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ 20% –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 6 –º–µ—Å—è—Ü–µ–≤. 
                        –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É–¥–µ–ª—è—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–¥–∞–Ω–∏—è–º.
                      </p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          <Card className="hover:shadow-lg transition-shadow">
            <CardHeader>
              <CardTitle className="flex items-center gap-2">
                <Icon name="Megaphone" className="text-primary" size={24} />
                –ê–Ω–æ–Ω—Å—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {eventsData.map((event) => (
                  <div
                    key={event.id}
                    className="p-6 rounded-lg border border-gray-200 hover:border-primary hover:bg-primary/5 transition-all group"
                  >
                    <div className="w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center mb-4 group-hover:bg-primary/20 transition-colors">
                      <Icon name={event.icon as any} className="text-primary" size={24} />
                    </div>
                    <h3 className="font-semibold text-gray-900 mb-2">{event.title}</h3>
                    <p className="text-sm text-gray-600 flex items-center gap-2">
                      <Icon name="Calendar" size={14} />
                      {event.date}
                    </p>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>
        </main>
      )}

      {activeTab === 'learning' && (
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="mb-6">
            <h2 className="text-3xl font-bold text-gray-900">–î–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</h2>
            <p className="text-gray-600 mt-1">–í–∞—à–∏ –∫—É—Ä—Å—ã –∏ –∑–∞–¥–∞–Ω–∏—è</p>
          </div>

          {selectedCourse === null ? (
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {coursesData.map((course) => (
                <Card
                  key={course.id}
                  className="hover:shadow-lg transition-all cursor-pointer group"
                  onClick={() => setSelectedCourse(course.id)}
                >
                  <CardHeader>
                    <div className="flex items-center justify-between mb-2">
                      <div className="w-12 h-12 rounded-lg bg-primary/10 flex items-center justify-center group-hover:bg-primary/20 transition-colors">
                        <Icon name="BookOpen" className="text-primary" size={24} />
                      </div>
                      <Badge variant="outline">{course.assignments.length} –∑–∞–¥–∞–Ω–∏–π</Badge>
                    </div>
                    <CardTitle className="text-xl">{course.name}</CardTitle>
                    <p className="text-sm text-gray-600 flex items-center gap-2 mt-2">
                      <Icon name="User" size={14} />
                      {course.teacher}
                    </p>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-2">
                      <div className="flex items-center justify-between text-sm">
                        <span className="text-gray-600">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                        <span className="font-semibold text-primary">{course.progress}%</span>
                      </div>
                      <Progress value={course.progress} className="h-2" />
                      
                      <div className="pt-4 flex items-center gap-2 text-sm text-primary font-medium group-hover:gap-3 transition-all">
                        –û—Ç–∫—Ä—ã—Ç—å –∫—É—Ä—Å
                        <Icon name="ArrowRight" size={16} />
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>
          ) : (
            <div>
              <Button
                variant="ghost"
                className="mb-6 gap-2"
                onClick={() => setSelectedCourse(null)}
              >
                <Icon name="ArrowLeft" size={18} />
                –ù–∞–∑–∞–¥ –∫ –∫—É—Ä—Å–∞–º
              </Button>

              {coursesData
                .filter((course) => course.id === selectedCourse)
                .map((course) => (
                  <div key={course.id}>
                    <Card className="mb-6">
                      <CardHeader>
                        <div className="flex items-center justify-between">
                          <div>
                            <CardTitle className="text-2xl mb-2">{course.name}</CardTitle>
                            <p className="text-gray-600 flex items-center gap-2">
                              <Icon name="User" size={16} />
                              –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {course.teacher}
                            </p>
                          </div>
                          <div className="text-right">
                            <div className="text-3xl font-bold text-primary mb-1">{course.progress}%</div>
                            <Progress value={course.progress} className="w-32 h-2" />
                          </div>
                        </div>
                      </CardHeader>
                    </Card>

                    <div className="space-y-4">
                      {course.assignments.map((assignment) => (
                        <Card
                          key={assignment.id}
                          className={`hover:shadow-lg transition-all ${
                            assignment.status === 'completed' ? 'bg-green-50/50' : ''
                          }`}
                        >
                          <CardContent className="pt-6">
                            <div className="flex items-start justify-between gap-6">
                              <div className="flex-1">
                                <div className="flex items-center gap-3 mb-3">
                                  <div
                                    className={`w-10 h-10 rounded-lg flex items-center justify-center ${
                                      assignment.status === 'completed'
                                        ? 'bg-green-100'
                                        : assignment.status === 'in_progress'
                                        ? 'bg-yellow-100'
                                        : 'bg-gray-100'
                                    }`}
                                  >
                                    <Icon
                                      name={
                                        assignment.status === 'completed'
                                          ? 'CheckCircle'
                                          : assignment.status === 'in_progress'
                                          ? 'Clock'
                                          : 'Circle'
                                      }
                                      className={
                                        assignment.status === 'completed'
                                          ? 'text-green-600'
                                          : assignment.status === 'in_progress'
                                          ? 'text-yellow-600'
                                          : 'text-gray-400'
                                      }
                                      size={20}
                                    />
                                  </div>
                                  <div className="flex-1">
                                    <h3 className="font-semibold text-gray-900 text-lg">{assignment.title}</h3>
                                    <p className="text-sm text-gray-600 flex items-center gap-2 mt-1">
                                      <Icon name="Calendar" size={14} />
                                      –î–µ–¥–ª–∞–π–Ω: {new Date(assignment.deadline).toLocaleDateString('ru-RU')}
                                    </p>
                                  </div>
                                </div>

                                <div className="flex items-center gap-2 mb-3">
                                  <Badge
                                    variant={
                                      assignment.status === 'completed'
                                        ? 'default'
                                        : assignment.status === 'in_progress'
                                        ? 'secondary'
                                        : 'outline'
                                    }
                                    className={
                                      assignment.status === 'completed'
                                        ? 'bg-green-500'
                                        : assignment.status === 'in_progress'
                                        ? 'bg-yellow-500'
                                        : ''
                                    }
                                  >
                                    {assignment.status === 'completed' && '–°–¥–∞–Ω–æ'}
                                    {assignment.status === 'in_progress' && '–í —Ä–∞–±–æ—Ç–µ'}
                                    {assignment.status === 'not_started' && '–ù–µ –Ω–∞—á–∞—Ç–æ'}
                                  </Badge>
                                </div>

                                {assignment.comment && (
                                  <div className="p-3 rounded-lg bg-blue-50 border border-blue-200 mt-3">
                                    <p className="text-sm font-medium text-blue-900 mb-1 flex items-center gap-2">
                                      <Icon name="MessageSquare" size={14} />
                                      –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:
                                    </p>
                                    <p className="text-sm text-blue-700">{assignment.comment}</p>
                                  </div>
                                )}
                              </div>

                              <div className="flex flex-col gap-2">
                                {assignment.status !== 'completed' && (
                                  <Button className="gap-2">
                                    <Icon name="Upload" size={16} />
                                    –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
                                  </Button>
                                )}
                                {assignment.status === 'completed' && (
                                  <Button variant="outline" className="gap-2">
                                    <Icon name="Download" size={16} />
                                    –°–∫–∞—á–∞—Ç—å
                                  </Button>
                                )}
                              </div>
                            </div>
                          </CardContent>
                        </Card>
                      ))}
                    </div>
                  </div>
                ))}
            </div>
          )}
        </main>
      )}

      {activeTab === 'market' && (
        <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="mb-6">
            <div className="flex items-center justify-between">
              <div>
                <h2 className="text-3xl font-bold text-gray-900">–ú–∏–Ω–∏–º–∞—Ä–∫–µ—Ç —Ä–∞–±–æ—Ç</h2>
                <p className="text-gray-600 mt-1">–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã</p>
              </div>
              <Button className="gap-2">
                <Icon name="Plus" size={18} />
                –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–±–æ—Ç—É
              </Button>
            </div>
          </div>

          <Card className="mb-6">
            <CardContent className="pt-6">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                <div>
                  <label className="text-sm font-medium text-gray-700 mb-2 block">–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å</label>
                  <select
                    className="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
                    value={filterSpecialty}
                    onChange={(e) => setFilterSpecialty(e.target.value)}
                  >
                    <option>–í—Å–µ</option>
                    <option>–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ</option>
                    <option>–§–∏–∑–∏–∫–∞</option>
                    <option>–•–∏–º–∏—è</option>
                    <option>–≠–∫–æ–Ω–æ–º–∏–∫–∞</option>
                  </select>
                </div>
                <div>
                  <label className="text-sm font-medium text-gray-700 mb-2 block">–¢–∏–ø —Ä–∞–±–æ—Ç—ã</label>
                  <select
                    className="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
                    value={filterType}
                    onChange={(e) => setFilterType(e.target.value)}
                  >
                    <option>–í—Å–µ</option>
                    <option>–ö—É—Ä—Å–æ–≤–∞—è</option>
                    <option>–î–∏–ø–ª–æ–º–Ω–∞—è</option>
                    <option>–†–µ—Ñ–µ—Ä–∞—Ç</option>
                    <option>–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è</option>
                  </select>
                </div>
                <div>
                  <label className="text-sm font-medium text-gray-700 mb-2 block">–ü—Ä–µ–¥–º–µ—Ç</label>
                  <select
                    className="w-full px-3 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
                    value={filterSubject}
                    onChange={(e) => setFilterSubject(e.target.value)}
                  >
                    <option>–í—Å–µ</option>
                    <option>–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞</option>
                    <option>–§–∏–∑–∏–∫–∞</option>
                    <option>–•–∏–º–∏—è</option>
                    <option>–≠–∫–æ–Ω–æ–º–∏–∫–∞</option>
                    <option>–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</option>
                    <option>–ò–ò</option>
                  </select>
                </div>
              </div>
            </CardContent>
          </Card>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {worksData
              .filter(
                (work) =>
                  (filterSpecialty === '–í—Å–µ' || work.specialty === filterSpecialty) &&
                  (filterType === '–í—Å–µ' || work.type === filterType) &&
                  (filterSubject === '–í—Å–µ' || work.subject === filterSubject)
              )
              .map((work) => (
                <Card key={work.id} className="hover:shadow-lg transition-all group flex flex-col">
                  <CardHeader>
                    <div className="w-full h-40 bg-gradient-to-br from-primary/10 to-blue-100 rounded-lg flex items-center justify-center mb-4 group-hover:from-primary/20 group-hover:to-blue-200 transition-all">
                      <Icon name="FileText" className="text-primary" size={48} />
                    </div>
                    <CardTitle className="text-lg line-clamp-2">{work.title}</CardTitle>
                    <p className="text-sm text-gray-600 flex items-center gap-2 mt-2">
                      <Icon name="User" size={14} />
                      {work.author}
                    </p>
                  </CardHeader>
                  <CardContent className="flex-1 flex flex-col">
                    <p className="text-sm text-gray-600 mb-4 line-clamp-3">{work.description}</p>
                    
                    <div className="flex flex-wrap gap-2 mb-4">
                      <Badge variant="outline">{work.specialty}</Badge>
                      <Badge variant="secondary">{work.type}</Badge>
                      <Badge variant="outline">{work.subject}</Badge>
                    </div>

                    <div className="flex items-center justify-between text-sm text-gray-600 mb-4 mt-auto">
                      <div className="flex items-center gap-1">
                        <Icon name="Star" className="text-yellow-500 fill-yellow-500" size={16} />
                        <span className="font-semibold">{work.rating}</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <Icon name="Download" size={16} />
                        <span>{work.downloads}</span>
                      </div>
                    </div>

                    <div className="flex gap-2">
                      <Button variant="outline" className="flex-1 gap-2">
                        <Icon name="Eye" size={16} />
                        –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                      </Button>
                      <Button className="flex-1 gap-2">
                        <Icon name="Download" size={16} />
                        –°–∫–∞—á–∞—Ç—å
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              ))}
          </div>

          {worksData.filter(
            (work) =>
              (filterSpecialty === '–í—Å–µ' || work.specialty === filterSpecialty) &&
              (filterType === '–í—Å–µ' || work.type === filterType) &&
              (filterSubject === '–í—Å–µ' || work.subject === filterSubject)
          ).length === 0 && (
            <div className="text-center py-20">
              <Icon name="Search" className="mx-auto text-gray-400 mb-4" size={64} />
              <h3 className="text-xl font-semibold text-gray-900 mb-2">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</h3>
              <p className="text-gray-600">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã</p>
            </div>
          )}
        </main>
      )}

      <footer className="bg-white border-t border-gray-200 mt-auto">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <div className="text-sm text-gray-600">
              ¬© 2024 StudApp. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </div>
            <div className="flex gap-6 text-sm">
              <a href="#" className="text-gray-600 hover:text-primary transition-colors">–ü–æ–¥–¥–µ—Ä–∂–∫–∞</a>
              <a href="#" className="text-gray-600 hover:text-primary transition-colors">–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</a>
              <a href="#" className="text-gray-600 hover:text-primary transition-colors">–ö–æ–Ω—Ç–∞–∫—Ç—ã</a>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}